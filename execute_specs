#!/usr/bin/env bash

specs_root_path="./test"
specs_extension=".bats"

usage() {
    printf "usage: %s [-h/--help] [-p | --tap] -- [spec pattern]\\n" "$0"
}

execute_spec() {
    local -r filename="${1:-}"
    local -r mode="${2:---p}"

    [[ -n $filename ]] && bats $mode $filename
}

spec_name() {
    local name="${1:-}"

    name=${name/$specs_root_path\//}
    name=${name/$specs_extension/}
    name=${name/__/::}

    echo $name
}

execute_specs() {
    local mode=""

    for arg in "${@}"; do
        shift
        if [[ $arg = "--tap" ]]; then mode="--tap"; fi
        if [[ $arg = "-p" ]]; then mode="-p"; fi
        if [[ $arg = "-h" ]] || [[ $arg = "--help" ]]; then usage; exit 0; fi
        if [[ $arg = "--" ]]; then break; fi
    done

    local -r slug="${1:-}"

    local total_failures=0
    local -a suites_with_failures=()

    while read -d '' filename; do

        if [[ -n $slug ]]; then
            if [[ $filename = ${filename/$slug/} ]]; then
                continue;
            fi
        fi

        printf "\\n[%s] executing <%s>...\\n" "${slug:-all}" "$(spec_name $filename)"
        execute_spec "${filename}" "${mode}"
        if [ $? -gt 0 ]; then
            suites_with_failures=( "${suites_with_failures[@]}" "$(spec_name $filename)" )
            ((total_failures++))
        fi

    done < <(find $specs_root_path -name "*$specs_extension" -not -path "$specs_root_path/test_helper/*" -maxdepth 2000 -type f -print0)

    if [[ $total_failures -gt 0 ]]; then
        printf "\\nWarning, there are %s suites with failures!!\\n" "$total_failures"
        printf " > %s\\n" ${suites_with_failures[@]}
    fi

    return $total_failures
}

execute_specs "$@"
